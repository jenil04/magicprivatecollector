service: mpc-backend
frameworkVersion: "3"
useDotenv: true
configValidationMode: error

provider:
  name: aws
  lambdaHashingVersion: 20201221
  runtime: nodejs14.x
  stage: ${opt:stage, "local"} # qa, prod
  region: us-east-1

  tags:
    provisionedBy: serverless

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"

  environment:
    REGION: ${self:provider.region}
    STAGE: ${self:provider.stage}
    LOG_LEVEL: debug
    MPC_NFT_TABLE: ${env:MPC_NFT_TABLE}-${opt:stage, self:provider.stage}
    MPC_ADDRESS_TABLE: ${env:MPC_ADDRESS_TABLE}-${opt:stage, self:provider.stage}
    APIKEY: ${env:APIKEY}-${opt:stage, self:provider.stage}
    QUICKNODE_PROVIDER: ${env:QUICKNODE_PROVIDER}-${opt:stage, self:provider.stage}
    QUICKNODE_APIKEY: ${env:QUICKNODE_APIKEY}-${opt:stage, self:provider.stage}

  apiGateway:
    shouldStartNameWithService: true

  httpApi:
    cors: true
    useProviderTags: true

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  serverless-offline:
    ignoreJWTSignature: true
    httpPort: 4000

plugins:
  - serverless-webpack
  - serverless-offline #serverless-offline needs to be last in the list!

functions:
  mint:
    handler: backend/api/mint.mintApi
    description: Mint a private NFT
    timeout: 10
    events:
      - httpApi:
          method: post
          path: /api/mint
  sale:
    handler: backend/api/sale.saleApi
    description: Transfer NFT
    timeout: 10
    events:
      - httpApi:
          method: post
          path: /api/sale
  private:
    handler: backend/api/private.privateApi
    description: Show Private Content NFT
    timeout: 10
    events:
      - httpApi:
          method: post
          path: /api/private
  nfts:
    handler: backend/api/nfts.nftsApi
    description: Get all private NFTs minted on our platform and if they belong to an address
    timeout: 10
    events:
      - httpApi:
          method: get
          path: /api/nfts
  nft:
    handler: backend/api/nft.nftApi
    description: Get NFT by chainId, tokenAddress and tokenId
    timeout: 10
    events:
      - httpApi:
          method: get
          path: /api/nft
resources:
  Resources:
    MPCAddressTABLE:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.MPC_ADDRESS_TABLE}
        AttributeDefinitions:
          - AttributeName: address
            AttributeType: S
          - AttributeName: tokenAddressTokenId
            AttributeType: S
        KeySchema: # create a primary key
          - AttributeName: address
            KeyType: HASH
          - AttributeName: tokenAddressTokenId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    MPCNFTTABLE:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.MPC_NFT_TABLE}
        AttributeDefinitions:
          - AttributeName: tokenAddressTokenId
            AttributeType: S
          - AttributeName: chainId
            AttributeType: S
        KeySchema: # create a primary key
          - AttributeName: tokenAddressTokenId
            KeyType: HASH
          - AttributeName: chainId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
package:
  patterns:
    - "!__tests__/**"
